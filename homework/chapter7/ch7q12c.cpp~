#include <iostream>
using namespace std;

template<class Object>
class Queue
{
public:
  virtual Queue(int size): capacity(size){ }//must take a size parameter
  virtual ~Queue() { } //destructor

  virtual void enqueue( const Object & x )
  {
    int count = 0;
    for(int i = 0; i < capacity; i++)
      {
	if( ARRAY[i] != 0)
	  count++;
      }
    if( count == capacity)
      new arr*
      
  }
  virtual void dequeue( ) = 0;
  virtual const Object & getFront( ) const = 0;

  virtual bool isEmpty( ) const = 0;
  virtual void makeEmpty( ) = 0;

private:
  int capacity;
  Object ARRAY[capacity];

};
